"""
IDP 3 Group 9 - Tidal Lagoon Mathematical Model
Module: 3D Model of Lagoon
Gianluca Cantone 2019
"""

#Libraries ====================================================================
import math as m
import matplotlib.pyplot as plt
import numpy as np
#from mpl_toolkits.mplot3d import Axes3D
from mpl_toolkits import mplot3d

#Variables ==================================================================== 
  


#Main Program =================================================================

fig = plt.figure()
ax = plt.axes(projection='3d', proj_type = 'ortho') #proj_type = 'ortho'

plt.title("My Plot")
ax.set_xlabel("X Axis")
ax.set_ylabel("Y Axis")
ax.set_zlabel("Z Axis")

'''
1. Program initializes coordinate arrays
2. Known coordinates are laoded into arrays
3. Intermediate values are interpolated and added into arrays
4. Integration algorithm integrates across grid at a given height, some new coordiantes will have to be interpolated from known coordinates.

Dummy test: 10x10 grid with edges initialized at 0. Dip in middle that will be interpolated outwards.
'''

X_Steps = np.linspace(0, 10, 11)
Y_Steps = np.linspace(0, 10, 11)
#X_Grid, Y = np.meshgrid(X_Steps, y)

X_Grid = np.array([[0,0,2,3,4],
                   [0,1,2,3,4],
                   [0,0,2,3,4],
                   [0,0,2,3,4],
                   [0,1,2,3,4]])

Y_Grid = np.array([[0,0,0,0,0],
                   [1,1,1,1,1],
                   [2,2,2,2,2],
                   [3,4,4,3,3],
                   [4,4,4,4,4]])

Z_Grid = np.array([[1,0,0,0,1],
                   [1,0,0,0,1],
                   [1,0.5,0.5,0.5,1],
                   [1,0.5,0.5,0.5,1],
                   [1,1,1,1,1]])

#ax.plot_wireframe(X_Grid, Y_Grid, Z_Grid, color="red")
#ax.plot_surface(X_Grid, Y_Grid, Z_Grid, color="red")

'''
First array in coordinate matrix is the outermost contour
'''








#x = np.linspace(0, 10, 11)
#y = np.linspace(0, 10, 11)
#
#X, Y = np.meshgrid(x, y)
# 
#Z = np.array([[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
#              [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
#              [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
#              [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
#              [1, 1, 1, 1, 0.5, 0, 0, 0, 0, 0, 0],
#              [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
#              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]])
#
#Z2 = np.array([[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
#              [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]])
#
#ax.plot_wireframe(X, Y, Z2, color="green")

#Precision to 2 dp
#Constant = 0.01590579

Contour_Map_X = np.array([[322.52,385.39,415.57,591.61,733.07,726.15,707.29,685.29,662.02,629.96,587.21,566.46,552.63],
                          [322.52,331.33,395.45,586.58,699.75,716.72,692.83,678.37,653.85,606.70,575.26,552.00,523.71],
                          [299.26,307.44,356.47,431.92,506.73,572.75,576.52,579.03,581.55,547.60,513.02,500.45,502.96],
                          [267.83,283.54,282.92,355.22,372.19,399.23,408.66,417.46,413.69,395.45,364.02,418.08,468.38],
                          [183.58,194.90,216.27,04.00,05.00,06.00,07.00,08.00,09.00,10.00,346.41,392.31,449.52],
                          [146.49,155.29,217.53,04.00,05.00,06.00,07.00,08.00,09.00,10.00,352.70,396.71,431.92],
                          [098.08,111.91,228.85,04.00,05.00,06.00,07.00,08.00,09.00,10.00,313.09,328.81,406.14],
                          [075.44,086.13,124.48,04.00,05.00,06.00,07.00,08.00,09.00,10.00,300.52,325.04,360.25],
                          [040.87,064.76,099.33,04.00,05.00,06.00,07.00,08.00,09.00,10.00,242.05,255.25,264.68],
                          [066.01,110.02,132.66,04.00,05.00,06.00,07.00,08.00,09.00,10.00,257.14,263.43,267.20],
                          [067.90,091.79,116.31,04.00,05.00,06.00,07.00,08.00,09.00,10.00,298.63,290.46,281.03],
                          [059.98,083.62,101.85,04.00,05.00,06.00,07.00,08.00,09.00,10.00,335.10,350.19,331.33],
                          [-00.63,013.83,062.87,04.00,05.00,06.00,07.00,08.00,09.00,10.00,390.42,401.11,385.39],
                          [-23.26,-01.26,055.95,04.00,05.00,06.00,07.00,08.00,09.00,10.00,438.83,422.49,478.44],
                          [-22.00,-03.77,050.30,04.00,05.00,06.00,07.00,08.00,09.00,10.00,491.64,485.36,519.94],
                          [-11.32,-02.51,089.90,04.00,05.00,06.00,07.00,08.00,09.00,10.00,549.49,528.74,534.40],
                          [54.07,78.59,107.51,120.71,135.17,182.32,229.48,276.63,397.34,510.51,571.49,635.62,638.76],
                          [00.00,011.95,033.95,098.08,115.05,247.71,365.28,470.90,542.57,604.81,670.82,709.18,718.61],
                          [-34.58,-18.86,031.44,128.26,196.78,279.14,369.68,465.24,526.23,608.58,699.75,753.18,759.47],
                          [-46.52,-29.55,-20.12,04.00,05.00,06.00,07.00,08.00,09.00,10.00,740.61,760.73,768.90],
                          
                          [01.00,02.00,03.00,04.00,05.00,06.00,07.00,08.00,09.00,10.00,11.00,12.00,13.00],
                          [01.00,02.00,03.00,04.00,05.00,06.00,07.00,08.00,09.00,10.00,11.00,12.00,13.00],
                          [01.00,02.00,03.00,04.00,05.00,06.00,07.00,08.00,09.00,10.00,11.00,12.00,13.00]])

Contour_Map_Y = np.array([[844.35,864.47,857.55,795.94,741.24,712.95,649.45,601.039,529.37,492.90,474.04,472.78,460.21],
                          [802.22,794.05,835.54,786.51,738.72,710.43,656.99,602.30,541.94,494.79,485.99,478.44,457.69],
                          [787.76,778.33,756.96,753.81,728.04,699.75,672.08,645.05,618.01,593.49,568.35,540.05,458.32],
                          [789.65,768.90,724.89,726.15,711.06,706.03,695.97,682.14,660.77,643.79,10.08,602.30,452.04],
                          [709.80,699.75,681.51,04.00,05.00,06.00,07.00,08.00,09.00,10.00,587.84,576.52,450.15],
                          [653.22,641.28,647.56,04.00,05.00,06.00,07.00,08.00,09.00,10.00,555.14,539.43,440.09],
                          [598.52,594.12,616.76,04.00,05.00,06.00,07.00,08.00,09.00,10.00,517.42,510.51,433.18],
                          [589.09,570.23,570.23,04.00,05.00,06.00,07.00,08.00,09.00,10.00,436.95,420.60,418.72],
                          [501.08,489.13,507.36,04.00,05.00,06.00,07.00,08.00,09.00,10.00,409.28,403.63,399.85],
                          [465.24,422.49,420.60,04.00,05.00,06.00,07.00,08.00,09.00,10.00,364.02,377.85,389.17],
                          [389.17,377.85,368.42,04.00,05.00,06.00,07.00,08.00,09.00,10.00,383.51,391.68,396.71],
                          [332.58,323.15,319.38,04.00,05.00,06.00,07.00,08.00,09.00,10.00,390.42,397.97,407.40],
                          [293.60,277.89,285.43,04.00,05.00,06.00,07.00,08.00,09.00,10.00,363.39,388.54,405.51],
                          [264.68,257.14,263.43,04.00,05.00,06.00,07.00,08.00,09.00,10.00,325.67,358.99,344.53],
                          [189.87,227.59,243.31,04.00,05.00,06.00,07.00,08.00,09.00,10.00,246.45,330.70,338.87],
                          [165.98,183.58,212.50,04.00,05.00,06.00,07.00,08.00,09.00,10.00,193.01,281.66,300.52],
                          [172.89,120.71,189.87,182.95,166.61,201.81,216.90,230.73,240.79,178.55,163.46,104.99,125.74],
                          [00.00,-06.29,-72.30,-08.80,056.58,098.08,089.28,053.44,014.46,042.12,-88.65,-69.79,-60.36],
                          [-84.25,-71.67,-94.31,-76.07,60.-98,-56.58,-50.92,-90.53,-116.31,-118.82,-121.97,-114.42,-88.02],
                          [-114.42,-120.08,-122.60,04.00,05.00,06.00,07.00,08.00,09.00,10.00,136.43,-134.54,-133.91],
                          
                          [01.00,02.00,03.00,04.00,05.00,06.00,07.00,08.00,09.00,10.00,11.00,12.00,13.00],
                          [01.00,02.00,03.00,04.00,05.00,06.00,07.00,08.00,09.00,10.00,11.00,12.00,13.00],
                          [01.00,02.00,03.00,04.00,05.00,06.00,07.00,08.00,09.00,10.00,11.00,12.00,13.00]])

Contour_Map_Z = np.array([[13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00],
                          [13.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,13.00],
                          [13.00,12.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,05.00,12.00,13.00],
                          [13.00,12.00,02.70,02.70,02.70,02.70,02.70,02.70,02.70,02.70,02.70,12.00,13.00],
                          [13.00,12.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,12.00,13.00],
                          [13.00,12.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,12.00,13.00],
                          [13.00,12.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,00.00,12.00,13.00],
                          [13.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,12.00,13.00],
                          [13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00,13.00]])

ax.set_xlim3d(0, 1000)
ax.set_ylim3d(0,1000)
ax.set_zlim3d(0,100)
#plt.axis('equal')
ax.plot_surface(Contour_Map_X, Contour_Map_Y, Contour_Map_Z, cmap='viridis', edgecolor="black")




















